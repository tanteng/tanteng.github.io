<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on 小谈博客</title>
    <link>http://tanteng.me/categories/mysql/</link>
    <description>Recent content in MySQL on 小谈博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Oct 2018 03:29:00 +0000</lastBuildDate>
    
	<atom:link href="http://tanteng.me/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL 字段为 NULL 的查询问题</title>
      <link>http://tanteng.me/2018/10/mysql-select-null/</link>
      <pubDate>Tue, 30 Oct 2018 03:29:00 +0000</pubDate>
      
      <guid>http://tanteng.me/2018/10/mysql-select-null/</guid>
      <description>假设 code 字段是可为 NULL &amp;hellip; AND code NOT IN () &amp;hellip; &amp;hellip; AND (code IS NULL or code NOT IN()) &amp;hellip; 是不一样的，第一个查不出 code IS NULL 的数据。 https://stackoverflow.com/questions/3536670/mysql-selecting-rows-where-a-column-is-null SQL NULL&amp;#8217;s special, and you have to do WHERE field IS NULL, as NULL cannot be equal to anything, including itself (ie: NULL =</description>
    </item>
    
    <item>
      <title>MySQL 数据库设计及性能优化Tips</title>
      <link>http://tanteng.me/2017/12/mysql-optimize-tips/</link>
      <pubDate>Sun, 17 Dec 2017 06:48:05 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/12/mysql-optimize-tips/</guid>
      <description>&lt;p&gt;&lt;strong&gt;规则1&lt;/strong&gt;：一般情况可以选择MyISAM存储引擎，如果需要事务支持必须使用InnoDB存储引擎。&lt;/p&gt;

&lt;p&gt;注意：MyISAM存储引擎 B-tree索引有一个很大的限制：参与一个索引的所有字段的长度之和不能超过1000字节。另外MyISAM数据和索引是分开，而InnoDB的数据存储是按聚簇(cluster)索引有序排列的，主键是默认的聚簇(cluster)索引，因此MyISAM虽然在一般情况下，查询性能比InnoDB高，但InnoDB的以主键为条件的查询性能是非常高的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 生成给定范围随机数</title>
      <link>http://tanteng.me/2017/10/mysql-rand-range/</link>
      <pubDate>Mon, 09 Oct 2017 10:32:00 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/10/mysql-rand-range/</guid>
      <description>&lt;p&gt;MySQL 的 rand() 函数是随机生成区间为 [0,1) 的浮点数，那么如何让它生成给定两个整数之间的随机数呢？试了一下这样可行：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:mysql decode:true&#34;&gt;select ROUND(RAND()*(10-1)+1);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;也就是：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:default decode:true&#34;&gt;select ROUND(RAND()*(max-min)+min);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;经测可行。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修改数据库、表、字段为 utf8mb4 编码</title>
      <link>http://tanteng.me/2017/06/alter-table-utf8mb4/</link>
      <pubDate>Fri, 09 Jun 2017 09:52:37 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/06/alter-table-utf8mb4/</guid>
      <description>创建 utf8mb4 数据库： create database xxx CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; 修改数据库、表、字段为 utf8mb4 编码： # For each database: ALTER DATABASE database_name CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci; For each table: ALTER TABLE table_name CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; For each column: ALTER TABLE table_name CHANGE column_name column_name VARCHAR(191) CHARACTER SET utf8mb4</description>
    </item>
    
    <item>
      <title>MySQL 配置文件 my.cnf 详细说明</title>
      <link>http://tanteng.me/2017/05/mysql-my-cnf/</link>
      <pubDate>Mon, 22 May 2017 05:41:04 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/05/mysql-my-cnf/</guid>
      <description>&lt;p&gt;本文记录MySQL配置文件my.cnf的详细说明。&lt;/p&gt;

&lt;h3 id=&#34;linux系统mysql配置文件读取顺序&#34;&gt;Linux系统MySQL配置文件读取顺序&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件名字&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/etc/my.cnf&lt;/td&gt;
&lt;td&gt;全局配置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;/etc/mysql/my.cnf&lt;/td&gt;
&lt;td&gt;全局配置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;SYSCONFDIR/my.cnf&lt;/td&gt;
&lt;td&gt;全局配置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;$MYSQL_HOME/my.cnf&lt;/td&gt;
&lt;td&gt;Server-specific 服务器特定的选项 (仅适用于服务端)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;defaults-extra-file&lt;/td&gt;
&lt;td&gt;如果有的话指定该文件&lt;code&gt;--defaults-extra-file=文件名字&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;~/.my.cnf&lt;/td&gt;
&lt;td&gt;Server-specific 服务器特定的选项&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;~/.mylogin.cnf&lt;/td&gt;
&lt;td&gt;User-specific 登录路径选择 （仅适用于客户端）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>MySQL大表加字段思路</title>
      <link>http://tanteng.me/2017/01/mysql-alter-table-big-data/</link>
      <pubDate>Thu, 19 Jan 2017 12:58:04 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/01/mysql-alter-table-big-data/</guid>
      <description>&lt;p&gt;给 MySQL 一张表加字段执行如下 sql 就可以了：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:mysql decode:true&#34;&gt;ALTER TABLE tbl_tpl ADD title(255) DEFAULT &amp;ldquo; COMMENT &amp;lsquo;标题&amp;rsquo; AFTER id;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是线上的一张表如果数据量很大呢，执行加字段操作就会锁表，这个过程可能需要很长时间甚至导致服务崩溃，那么这样操作就很有风险了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mysql性能优化–Explain详解</title>
      <link>http://tanteng.me/2017/01/mysql-explain/</link>
      <pubDate>Thu, 19 Jan 2017 09:07:43 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/01/mysql-explain/</guid>
      <description>&lt;h3 id=&#34;explain&#34;&gt;EXPLAIN&lt;/h3&gt;

&lt;p&gt;mysql explain命令是查询性能优化不可缺少的一部分。&lt;/p&gt;

&lt;h4 id=&#34;toc_1&#34;&gt;explain output columns&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;列名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;执行编号，标识select所属的行。如果在语句中没有子查询或者关联查询，只有唯一的select，每行都将显示1。否则，内层的select语句一般会顺序编号，对应于其在原始语句中的位置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;select_type&lt;/td&gt;
&lt;td&gt;显示本行是简单或是复杂select。如果查询有任何复杂的子查询，则最外层标记为primary（derived、Union、Union resuit）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;访问引用哪个表（引用某个查询，如“derived3”）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;partitions&lt;/td&gt;
&lt;td&gt;匹配的分区&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;数据访问/读取操作类型（all、index、range、ref、eq_ref、const/system、NULL）。join类型&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;possible_keys&lt;/td&gt;
&lt;td&gt;揭示哪一些索引可能有利于高效的查找&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;key&lt;/td&gt;
&lt;td&gt;此次查询中确切使用到的索引.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;key_len&lt;/td&gt;
&lt;td&gt;显示mysql在索引里使用的字节数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ref&lt;/td&gt;
&lt;td&gt;哪个字段或常数与key一起被使用&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;rows&lt;/td&gt;
&lt;td&gt;为了找到所需的列而需要读取的行数，估算值，不精确。通过把所有rows列值相乘，可粗略估算整个查询会检查的行数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;filtered&lt;/td&gt;
&lt;td&gt;表示此查询条件所过滤的数据的百分比&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Extra&lt;/td&gt;
&lt;td&gt;额外信息，如using index、filesort等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>MySQL主从和双主架构的适用场景</title>
      <link>http://tanteng.me/2016/09/mysql-master-slave-and-master-master/</link>
      <pubDate>Wed, 28 Sep 2016 10:20:18 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/09/mysql-master-slave-and-master-master/</guid>
      <description>&lt;p&gt;本文介绍 MySQL 主从和双主架构的适用场景。&lt;/p&gt;

&lt;h3 id=&#34;mysql主从&#34;&gt;MySQL主从&lt;/h3&gt;

&lt;p&gt;MySQL主从架构的适用场景是读写分离，通过主库写，从库读，大多数场景是读的情况比较多，单一 master 多 slave 的架构可以很好解决读压力大的问题。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-10946 size-full aligncenter&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2016/09/master-slave.jpg&#34; alt=&#34;master-slave&#34; width=&#34;401&#34; height=&#34;299&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常用Linux操作数据库命令及MySQL语句</title>
      <link>http://tanteng.me/2016/06/mysql-command/</link>
      <pubDate>Wed, 15 Jun 2016 11:29:06 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/06/mysql-command/</guid>
      <description>&lt;p&gt;以下是在Linux下经常会用到的MySQL的一些命令，导出，导入，建库建表，备份，以及MySQL修改字段，添加字段等语法。&lt;/p&gt;

&lt;h3 id=&#34;数据库表导入&#34;&gt;数据库表导入&lt;/h3&gt;

&lt;p&gt;恢复sql到数据库，不会覆盖数据库，仅执行恢复的sql语句，常用于数据库表的导入：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:mysql decode:true &#34;&gt;mysql -uroot -p tanteng.me  &amp;lt; mobile_promote.sql&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL查看数据库大小</title>
      <link>http://tanteng.me/2016/06/mysql-data-length/</link>
      <pubDate>Fri, 03 Jun 2016 11:24:42 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/06/mysql-data-length/</guid>
      <description>&lt;p&gt;1、进入information_schema 数据库（存放了其他的数据库的信息）&lt;/p&gt;

&lt;p&gt;use information_schema;&lt;/p&gt;

&lt;p&gt;2、查询所有数据的大小：&lt;/p&gt;

&lt;p&gt;select concat(round(sum(data_length/1024/1024),2),&amp;#8217;MB&amp;#8217;) as data from tables;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOS 7.0 MariaDB异常结束的解决方法</title>
      <link>http://tanteng.me/2016/03/centos7-mariadb-break/</link>
      <pubDate>Mon, 28 Mar 2016 04:06:03 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/centos7-mariadb-break/</guid>
      <description>CentOS 7.0 x64下MariaDB异常结束的解决方法 http://linux.it.net.cn/e/data/MariaDB/2014/1014/6509.html</description>
    </item>
    
    <item>
      <title>MySQL数据库性能优化之缓存参数设置</title>
      <link>http://tanteng.me/2016/03/innodb_buffer_pool_size/</link>
      <pubDate>Mon, 28 Mar 2016 04:02:15 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/innodb_buffer_pool_size/</guid>
      <description>&lt;p&gt;网站运行在阿里云上，1G内存，PHP7+PHP-FPM+Nginx+MariaDB+Redis都安装在一台服务器上，而网站访问量一天也有500IP，不多，但也造成了一点压力，刚放上去几天数据库经常会挂掉，于是查阅数据库方面的性能优化，需要设置一些参数。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL批量删除相同前缀的表</title>
      <link>http://tanteng.me/2016/03/mysql-drop-tables-prefix/</link>
      <pubDate>Thu, 24 Mar 2016 05:49:04 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/mysql-drop-tables-prefix/</guid>
      <description>&lt;p&gt;MySQL删除表的语法是drop table xxx，但是想要删除一个数据库中相同前缀的表，该怎么写MySQL语句呢？drop table like &amp;#8216;xx_%&amp;#8217;，drop table REGEXP &amp;#8230;，drop语句模糊匹配和正则的形式都不支持。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL备份数据库命令</title>
      <link>http://tanteng.me/2016/03/mysql-backup/</link>
      <pubDate>Sat, 19 Mar 2016 16:48:45 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/mysql-backup/</guid>
      <description>&lt;p&gt;MySQL备份数据库命令&lt;/p&gt;

&lt;p&gt;1.导出整个数据库&lt;/p&gt;

&lt;p&gt;导出文件默认是存在mysql\bin目录下&lt;/p&gt;

&lt;p&gt;mysqldump -u 用户名 -p 数据库名 &amp;gt; 导出的文件名&lt;/p&gt;

&lt;p&gt;mysqldump -u user_name -p123456 database_name &amp;gt; outfile_name.sql&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何使用truncate table清空有外键约束的表</title>
      <link>http://tanteng.me/2016/02/truncate-table-foreign-keys/</link>
      <pubDate>Thu, 18 Feb 2016 03:36:42 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/02/truncate-table-foreign-keys/</guid>
      <description>&lt;p&gt;在MySQL中使用&amp;#8221;truncate table 表名&amp;#8221;语句可以清空一张表，并且计数器会重置，但是在存在外键约束的表中无法使用truncate，那怎么办？&lt;/p&gt;

&lt;p&gt;方法是首先禁用外键，使用truncate之后再恢复！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOS 7通过yum安装MySQL</title>
      <link>http://tanteng.me/2016/02/centos-7-yum-install-mysql/</link>
      <pubDate>Mon, 08 Feb 2016 05:30:40 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/02/centos-7-yum-install-mysql/</guid>
      <description>在CentOS 7中使用yum list mysql*，没有可以安装的MySQL版本，CentOS 7中默认使用的数据库是MariaDB，关于MariaD</description>
    </item>
    
    <item>
      <title>MySQL 字符串字段转换 crc32 建索引提高查询效率</title>
      <link>http://tanteng.me/2016/02/crc32-mysql-index/</link>
      <pubDate>Mon, 01 Feb 2016 01:29:07 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/02/crc32-mysql-index/</guid>
      <description>&lt;p&gt;给字符串类型的字段建立索引效率不高，但是必须要经常查这个字段怎么建索引？比如这个字段名称是 sys_trans_id 字符串类型，那么可以建一个字段 sys_trans_id_src32 来存储 crc32 的值，并给这个字段建立索引。&lt;/p&gt;

&lt;p&gt;crc32 是整形，在MySQL中，给整形字段建立索引效率比较高，crc32虽然不能确保唯一性，但是无碍，相同的机率也是极小，关键是可以大大减少查询的范围，给sys_trans_id_src32 这个字段建立索引，查询的时候带上 crc32 字段就可以利用到索引。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>查询数据库重复记录sql</title>
      <link>http://tanteng.me/2016/01/repeat-group-having/</link>
      <pubDate>Mon, 25 Jan 2016 09:59:07 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/01/repeat-group-having/</guid>
      <description>每条记录都有个hash字段，hash是把这条记录几个不同的字段组成唯一的值进行hash算法存的一个值，有了这个hash，可以判断记录是否重复</description>
    </item>
    
    <item>
      <title>MySQL导出表结构表数据mysqldump命令用法</title>
      <link>http://tanteng.me/2016/01/mysql-mysqldump-usage/</link>
      <pubDate>Tue, 19 Jan 2016 15:50:52 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/01/mysql-mysqldump-usage/</guid>
      <description>命令行下具体用法如下： mysqldump -u用戶名 -p密码 -d 數據库名 表名 脚本名; 1、导出數據库為dbname的表结构（其中用戶名為root,密码為dbpas</description>
    </item>
    
    <item>
      <title>MySQL zerofill是什么意思？</title>
      <link>http://tanteng.me/2015/06/mysql-zerofill/</link>
      <pubDate>Thu, 11 Jun 2015 08:39:41 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/06/mysql-zerofill/</guid>
      <description>zerofill，字面上理解就是填充0.在MySQL列中使用zerofill，如插入int(4)，你插入1，显示0001，你插入55555，</description>
    </item>
    
    <item>
      <title>将left join拆分成多条sql语句</title>
      <link>http://tanteng.me/2015/06/left-join-split-sql/</link>
      <pubDate>Tue, 09 Jun 2015 16:29:05 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/06/left-join-split-sql/</guid>
      <description>&lt;p&gt;本文讲解如何把一条带有一个或多个left join或right join的sql语句拆分成多条sql语句。MySQL进行连表查询效率是很低的，特别是数据很大，而且并发量很高的情况，索引都无法解决问题，最好的办法就是把sql语句拆分成多条单表查询的sql。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于 utf8mb4，它和 utf8 有什么区别</title>
      <link>http://tanteng.me/2015/05/utf8mb4/</link>
      <pubDate>Wed, 20 May 2015 15:16:47 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/05/utf8mb4/</guid>
      <description>&lt;p&gt;最近经常看到一个没见过的编码格式叫utf8mb4，总是和emoj表情联系在一起，什么是utf8mb4，它和utf8有什么区别呢？&lt;/p&gt;

&lt;p&gt;utf8mb4是一种可支持4个字节UTF编码，一个字符最多能有4字节，所以能支持更多的字符集。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>left join多张表查出重复数据的解决办法</title>
      <link>http://tanteng.me/2015/05/left-join-duplication/</link>
      <pubDate>Tue, 19 May 2015 08:53:04 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/05/left-join-duplication/</guid>
      <description>&lt;p&gt;今天线上出现一个问题，查询售后订单出现很多重复的内容，经查，是left join多张表导致的查询出重复数据。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>什么时候使用mysql事务？</title>
      <link>http://tanteng.me/2015/04/mysql-commit/</link>
      <pubDate>Tue, 07 Apr 2015 15:25:18 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/04/mysql-commit/</guid>
      <description>&lt;p&gt;突然想到一个问题，mysql中我们经常用到事务，比如一次向几张表插入内容，如果中间出错了可以回滚，但是实际开发中，像这种一次可能向多个数据表写入数据的情况，并没有采用事务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sequel导入sql文件的时候提示错误</title>
      <link>http://tanteng.me/2015/03/sequel-import/</link>
      <pubDate>Sat, 21 Mar 2015 10:50:22 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/03/sequel-import/</guid>
      <description>&lt;p&gt;sequel 导入 sql 文件的时候提示错误：An error occurred when reading the file, as it could not be read in the encoding you selected utf8.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MAMP如何修改mysql密码</title>
      <link>http://tanteng.me/2015/03/mamp-mysql-pass/</link>
      <pubDate>Sat, 14 Mar 2015 16:53:01 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/03/mamp-mysql-pass/</guid>
      <description>&lt;p&gt;MAMP是OS X系统下常用的PHP集成环境，如何修改MAMP登陆mysql的密码呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>char还是varchar</title>
      <link>http://tanteng.me/2015/01/char-varchar/</link>
      <pubDate>Fri, 30 Jan 2015 02:57:54 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/01/char-varchar/</guid>
      <description>&lt;p&gt;在mysql的数据库设计中，要给字段选用合适的类型，文本型的字段常见的有char，vchar，text等。比如网址一般选vchar，标题也可以vchar，姓名可以是char。那么选char还是vchar根据什么来选择呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在mysql中使用正则表达式</title>
      <link>http://tanteng.me/2015/01/mysql-regexp/</link>
      <pubDate>Thu, 29 Jan 2015 03:16:24 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/01/mysql-regexp/</guid>
      <description>&lt;p&gt;正则表达式广泛用于各种程序编程的地方，在mysql sql语句中使用正则表达式也可以解决很多查询问题，化繁为简，并且巧妙运用可以提高mysql查询效率。本文讲讲mysql中如何使用regexp语法运行含有正则表达式的sql语句。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mysql关联表更新sql语句</title>
      <link>http://tanteng.me/2014/12/mysql-update-left-join/</link>
      <pubDate>Fri, 05 Dec 2014 07:35:41 +0000</pubDate>
      
      <guid>http://tanteng.me/2014/12/mysql-update-left-join/</guid>
      <description>&lt;p&gt;比如有两张表，其中一张表某个字段的值要关联另一张表进行统计，就要用到mysql的update方法，并且left join另一张表进行联合查询。&lt;/p&gt;

&lt;p&gt;表1&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.tanteng.me/wp-content/uploads/2014/12/update_left_join1.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-6747&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2014/12/update_left_join1.png&#34; alt=&#34;update left join&#34; width=&#34;599&#34; height=&#34;282&#34; srcset=&#34;https://blog.tanteng.me/wp-content/uploads/2014/12/update_left_join1.png 599w, https://blog.tanteng.me/wp-content/uploads/2014/12/update_left_join1-300x141.png 300w, https://blog.tanteng.me/wp-content/uploads/2014/12/update_left_join1-150x70.png 150w&#34; sizes=&#34;(max-width: 599px) 100vw, 599px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mysql排序order by find_in_set</title>
      <link>http://tanteng.me/2014/11/find-in-set/</link>
      <pubDate>Sat, 29 Nov 2014 02:07:59 +0000</pubDate>
      
      <guid>http://tanteng.me/2014/11/find-in-set/</guid>
      <description>&lt;p&gt;mysql进行排序的时候如果需要按照原始的顺序排序，就可以使用order by find_in_set()方法，具体用法如下：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:mysql decode:true&#34; title=&#34;FIND_IN_SET&#34;&gt;select * from ecs_goods where goods_id in ($idList) order by FIND_IN_SET(goods_id,&amp;lsquo;$idList&amp;rsquo;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这句mysql语句用到了find_in_set进行排序，意思是根据goods_id在$idList这个变量中的前后顺序进行排序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Navicat将Sql Server 2000数据库导入（转换）到MySql中</title>
      <link>http://tanteng.me/2014/04/navicat-sql-server-2000/</link>
      <pubDate>Tue, 22 Apr 2014 06:03:20 +0000</pubDate>
      
      <guid>http://tanteng.me/2014/04/navicat-sql-server-2000/</guid>
      <description>&lt;p&gt;大家都知道， Sql Server 2000的数据库只能运行在MS系列平台下，而我们有时需要将MS下的数据库移植到Linux或其他平台上，这是可能需要数据库的导入导出功能，但这样也未免太繁琐了，下面介绍一种简便的方法一步实现数据库的移植。&lt;/p&gt;

&lt;p&gt;Navicat 8是针对mysql的一个很好用的图形化管理工具，利用它导入功能把数据从sqlserver2000中直接导入到MySQL中。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>left join,inner join区别</title>
      <link>http://tanteng.me/2013/11/left-join-inner/</link>
      <pubDate>Fri, 15 Nov 2013 05:53:20 +0000</pubDate>
      
      <guid>http://tanteng.me/2013/11/left-join-inner/</guid>
      <description>&lt;p&gt;假设我们有两张表。Table A 是左边的表。Table B 是右边的表。其各有四条记录，其中有两条记录name是相同的，如下所示：让我们看看不同JOIN的不同&lt;/p&gt;

&lt;div&gt;
  &lt;table width=&#34;222&#34; border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
    &lt;colgroup&gt; &lt;col width=&#34;86&#34; /&gt; &lt;col width=&#34;136&#34; /&gt;&lt;/colgroup&gt; &lt;tr&gt;
      &lt;td colspan=&#34;2&#34; width=&#34;222&#34;&gt;
        A表
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        id
      &lt;/td&gt;
      
      &lt;td&gt;
        name
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        1
      &lt;/td&gt;
      
      &lt;td&gt;
        Pirate
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        2
      &lt;/td&gt;
      
      &lt;td&gt;
        Monkey
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        3
      &lt;/td&gt;
      
      &lt;td&gt;
        Ninja
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        4
      &lt;/td&gt;
      
      &lt;td&gt;
        Spaghetti
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
  
  &lt;table width=&#34;222&#34; border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
    &lt;colgroup&gt; &lt;col width=&#34;86&#34; /&gt; &lt;col width=&#34;136&#34; /&gt;&lt;/colgroup&gt; &lt;tr&gt;
      &lt;td colspan=&#34;2&#34; width=&#34;222&#34;&gt;
        B表
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        id
      &lt;/td&gt;
      
      &lt;td&gt;
        name
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        1
      &lt;/td&gt;
      
      &lt;td&gt;
        Rutabaga
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        2
      &lt;/td&gt;
      
      &lt;td&gt;
        Pirate
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        3
      &lt;/td&gt;
      
      &lt;td&gt;
        Darth Vade
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        4
      &lt;/td&gt;
      
      &lt;td&gt;
        Ninja
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>