<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>服务器 on 小谈博客</title>
    <link>http://tanteng.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
    <description>Recent content in 服务器 on 小谈博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Mar 2018 11:03:26 +0000</lastBuildDate>
    
	<atom:link href="http://tanteng.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一致性哈希算法及其在分布式系统中的应用</title>
      <link>http://tanteng.me/2018/03/consistent-hashing/</link>
      <pubDate>Thu, 01 Mar 2018 11:03:26 +0000</pubDate>
      
      <guid>http://tanteng.me/2018/03/consistent-hashing/</guid>
      <description>&lt;h1 id=&#34;摘要&#34;&gt;摘要&lt;/h1&gt;

&lt;p&gt;本文将会从实际应用场景出发，介绍一致性哈希算法（Consistent Hashing）及其在分布式系统中的应用。首先本文会描述一个在日常开发中经常会遇到的问题场景，借此介绍一致性哈希算法以及这个算法如何解决此问题；接下来会对这个算法进行相对详细的描述，并讨论一些如虚拟节点等与此算法应用相关的话题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP-FPM,Nginx,FastCGI 之间的关系</title>
      <link>http://tanteng.me/2017/11/nginx-fastcgi-php-fpm/</link>
      <pubDate>Thu, 09 Nov 2017 08:44:27 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/11/nginx-fastcgi-php-fpm/</guid>
      <description>&lt;p&gt;本文介绍 PHP-FPM,Nginx,FastCGI 三者之间的关系，以及 Nginx 反向代理和负载均衡的配置。&lt;/p&gt;

&lt;h3 id=&#34;php-fpm-nginx-fastcgi-之间的关系&#34;&gt;PHP-FPM,Nginx,FastCGI 之间的关系&lt;/h3&gt;

&lt;p&gt;FastCGI 是一个协议，它是应用程序和 WEB 服务器连接的桥梁。Nginx 并不能直接与 PHP-FPM 通信，而是将请求通过 FastCGI 交给 PHP-FPM 处理。&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:default decode:true&#34;&gt;location ~ .php$ {
    try_files $uri /index.php =404;
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_index index.php;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
}&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 Linux 上如何清除内存的 Cache、Buffer 和交换空间</title>
      <link>http://tanteng.me/2017/05/linux-clear-cache-buffer/</link>
      <pubDate>Thu, 18 May 2017 08:23:10 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/05/linux-clear-cache-buffer/</guid>
      <description>在 Linux 上如何清除内存的 Cache、Buffer 和交换空间 链接：https://linux.cn/article-5627-1.html</description>
    </item>
    
    <item>
      <title>Shell 脚本请求 url 判断状态码</title>
      <link>http://tanteng.me/2017/05/shell-check-url/</link>
      <pubDate>Tue, 02 May 2017 03:05:16 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/05/shell-check-url/</guid>
      <description>Shell 脚本请求 URL判断状态码是否异常并执行相关操作。 示例如下： #!/bin/bash fileurl=&amp;lsquo;./check_url.txt&amp;rsquo; DATE_N=date &amp;quot;+%Y-%m-%d %H:%M:%S&amp;quot; for chkurl in $(cat ${fileurl}) # ${}忽略空格 do # -o 输出内容到/dev/null; -s 静默方</description>
    </item>
    
    <item>
      <title>netstat 命令统计 tcp 各状态数量</title>
      <link>http://tanteng.me/2017/04/netstat-tcp-state/</link>
      <pubDate>Fri, 28 Apr 2017 03:37:31 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/04/netstat-tcp-state/</guid>
      <description>&lt;p&gt;统计 tcp 各种状态的个数：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:default decode:true&#34;&gt;netstat -n | awk &amp;lsquo;/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}&amp;rsquo;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:default decode:true &#34;&gt;[nobody@test14439 ~]$ netstat -n | awk &amp;lsquo;/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}&amp;rsquo;
TIME_WAIT 418
CLOSE_WAIT 109
ESTABLISHED 65
SYN_RECV 1&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VirtualBox启动蓝屏问题</title>
      <link>http://tanteng.me/2017/03/virtualbox-blue-screen/</link>
      <pubDate>Fri, 24 Mar 2017 11:18:09 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/03/virtualbox-blue-screen/</guid>
      <description>&lt;p&gt;用 vagrant + VirtualBox 虚拟机，最近几次没有关闭虚拟机重启电脑，导致虚拟机无法启动，每次到 Booting VM 这个步骤就会蓝屏，重新安装 vagrant，VirtualBox 软件都无法正常运行。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-11331&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2017/03/bootingvm.png&#34; alt=&#34;&#34; width=&#34;943&#34; height=&#34;505&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Linux 命令分析 Nginx 日志统计 ip 访问数</title>
      <link>http://tanteng.me/2017/03/linux-nginx-ip/</link>
      <pubDate>Thu, 16 Mar 2017 14:03:52 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/03/linux-nginx-ip/</guid>
      <description>统计 access.log 文件访问次数最多的 ip 地址，并取前 10 条记录。 Linux 命令如下： cat access.log | awk &amp;#8216;{print $1}&amp;#8217; | sort | uniq -c | sort -k1nr | head -10 效果如图所示：</description>
    </item>
    
    <item>
      <title>清理 Ubuntu 系统硬盘空间</title>
      <link>http://tanteng.me/2017/02/free-up-ubuntu-disk/</link>
      <pubDate>Thu, 23 Feb 2017 04:57:48 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/02/free-up-ubuntu-disk/</guid>
      <description>&lt;p&gt;To delete downloaded packages (.deb) already installed (and no longer needed)&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:default decode:true&#34;&gt;sudo apt-get clean&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>文件权限问题导致的 git fetch 命令执行失败</title>
      <link>http://tanteng.me/2017/02/git-fetch-permission-denied/</link>
      <pubDate>Thu, 16 Feb 2017 07:56:50 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/02/git-fetch-permission-denied/</guid>
      <description>&lt;p&gt;在一个基于 git 的发布系统中拉取代码，发现无法拉取最新的提交记录，通过调试和查看日志文件找到一行错误：&lt;strong&gt;error: cannot open .git/FETCH_HEAD: Permission denied&lt;/strong&gt;，原因是文件权限问题导致。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 中 /var/spool/postfix/maildrop 占用空间很大的原因</title>
      <link>http://tanteng.me/2017/01/linux-postfix-maildrop/</link>
      <pubDate>Sat, 14 Jan 2017 05:52:21 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/01/linux-postfix-maildrop/</guid>
      <description>&lt;p&gt;MySQL 报错 Exception Message:SQLSTATE[08004][1040]Too many connections，经查这次错误是硬盘空间满了导致的，于是找一些可以删除的文件腾出一些空间。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Supervisor 管理 Laravel 队列进程</title>
      <link>http://tanteng.me/2017/01/supervisor-laravel-queue/</link>
      <pubDate>Sat, 07 Jan 2017 12:48:53 +0000</pubDate>
      
      <guid>http://tanteng.me/2017/01/supervisor-laravel-queue/</guid>
      <description>&lt;p&gt;Supervisor 是一个 Python 写的进程管理工具，有时一个进程需要在后台运行，并且意外挂掉后能够自动重启，就需要这么一个管理进程的工具。在 Laravel 开发中，也经常使用到队列监听，可以配合 Supervisor 来管理 Laravel 队列进程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Nginx 反向代理和负载均衡搭建多人测试环境</title>
      <link>http://tanteng.me/2016/12/nginx-test-environment/</link>
      <pubDate>Sat, 17 Dec 2016 06:19:44 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/12/nginx-test-environment/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-11120&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2016/12/nginx-test.jpeg&#34; alt=&#34;&#34; width=&#34;1328&#34; height=&#34;874&#34; /&gt;&lt;/p&gt;

&lt;p&gt;假如我们使用 git 进行版本控制，在一个大型网站中，开发人员在不同的分支上开发不同的需求，当一个需求开发完成需要测试，我们会把这个分支告诉测试人员，然后测试人员在测试机的网站目录拉取这个分支进行测试。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 中执行命令 ; 和 &amp;&amp; 的区别</title>
      <link>http://tanteng.me/2016/12/linux-cmd/</link>
      <pubDate>Wed, 30 Nov 2016 17:16:59 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/12/linux-cmd/</guid>
      <description>在 Linux 中经常使用到一个命令，如 make &amp;amp;&amp;amp; make install，这里也可以使用 make ; make install，那么在 Linux 中执行命令 ; 和 &amp;amp;&amp;amp; 有何区别？ &amp;amp;&amp;amp; 表示第一个命令执行</description>
    </item>
    
    <item>
      <title>grep 查找匹配的最后一行</title>
      <link>http://tanteng.me/2016/11/grep-tail-last-line/</link>
      <pubDate>Sun, 20 Nov 2016 06:58:23 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/11/grep-tail-last-line/</guid>
      <description>grep 查找匹配的最后一行，如： grep &amp;ldquo;哈哈&amp;rdquo; aa.log | tail -1</description>
    </item>
    
    <item>
      <title>在不同端口下模拟 Nginx 反向代理和负载均衡</title>
      <link>http://tanteng.me/2016/10/nginx-load-balance-conf/</link>
      <pubDate>Sun, 30 Oct 2016 14:56:12 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/10/nginx-load-balance-conf/</guid>
      <description>&lt;p&gt;Nginx 是一个轻量级的 WEB 服务器，反向代理服务器和电子邮件服务器，本文介绍在虚拟机中使用不同的端口来模拟不同的服务器，并使用 Nginx 反向代理功能实现服务器负载均衡的效果。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Nginx map 指令实现页面重定向</title>
      <link>http://tanteng.me/2016/10/nginx-map-redirect/</link>
      <pubDate>Mon, 10 Oct 2016 11:00:47 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/10/nginx-map-redirect/</guid>
      <description>&lt;p&gt;有时候网站 URL 规则会进行调整，需求的不断变化也会导致一些旧的 URL 无法访问，这个时候可以使用 Nginx 的 map 指令匹配这些旧的 URL，并重定向到新的 URL 规则，而且这种方式是在 Nginx 层面进行，不会对网站性能产生影响。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Nginx map 指令匹配 User Agent 自定义值</title>
      <link>http://tanteng.me/2016/10/nginx-map-http-user-agent/</link>
      <pubDate>Mon, 10 Oct 2016 07:02:22 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/10/nginx-map-http-user-agent/</guid>
      <description>&lt;p&gt;本文介绍有关 User-Agent 的知识，以及使用 Nginx map 指令配合正则表达式匹配 User Agent 自定义值，通过捕获 UA 自定义值，可以做很多事情，其中一个场景是：让一台测试机支持多个测试同时测试一个项目，原理就是匹配 UA 值，设置不同的 WEB 根目录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vim常用操作</title>
      <link>http://tanteng.me/2016/09/vim-syntax/</link>
      <pubDate>Wed, 21 Sep 2016 14:06:02 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/09/vim-syntax/</guid>
      <description>&lt;p&gt;vim 在 Linux 下使用很多，但是习惯了在 Windows 下的文本操作，在 vim 中进行文本操作会觉得很不方便，但是 vim 是一个很强大的工具，只是还不熟练去使用它，下面是一些常用的 vim 文本操作方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let’s Encrypt 开启多域名 HTTPS</title>
      <link>http://tanteng.me/2016/09/lets-encrypt-multi-domain-https/</link>
      <pubDate>Mon, 12 Sep 2016 11:26:47 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/09/lets-encrypt-multi-domain-https/</guid>
      <description>&lt;p&gt;上周去腾讯参加了 IMWEB 前端大会，听了关于 HTTPS 的讲座，回来把自己的主页和博客升级了一下，开启了 HTTPS.本文主要记录一下开启 HTTPS 的过程，以及碰到的问题和解决方法，以及如何多域名开启 HTTPS，做进一步的补充。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.tanteng.me/wp-content/uploads/2016/09/imweb-https.jpg&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-10492&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2016/09/imweb-https.jpg&#34; alt=&#34;imweb-https&#34; width=&#34;1280&#34; height=&#34;960&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 expect 脚本实现 ssh 自动登陆服务器</title>
      <link>http://tanteng.me/2016/08/expcet-ssh-password/</link>
      <pubDate>Fri, 19 Aug 2016 14:34:55 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/08/expcet-ssh-password/</guid>
      <description>&lt;p&gt;又学了一个小招，使用 expect 脚本语言实现 ssh 自动连接到服务器，实现自动化脚本。因为每次使用 ssh root@xx.xx.xx.xx 连接自己的阿里云服务器，都要手动输入一遍密码，有没有办法自动输入呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决 Redis 只读不可写的问题</title>
      <link>http://tanteng.me/2016/07/misconf-redis-configured-save-rdb-snapshots/</link>
      <pubDate>Fri, 15 Jul 2016 02:15:42 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/07/misconf-redis-configured-save-rdb-snapshots/</guid>
      <description>&lt;p&gt;在 Redis 终端上进行读写操作，发现只读不可写，GET 操作是正常的，SET 操作提示错误：(error)MISCONF Redis is configured to save RDB snapshots,but is currently not able to persist on disk. Commands that may modify the data set are disabled. 如图所示：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.tanteng.me/wp-content/uploads/2016/07/misconf-redis-is-configured-to-save-rdb-snapashots.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone wp-image-10253 size-full&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2016/07/misconf-redis-is-configured-to-save-rdb-snapashots.png&#34; alt=&#34;misconf-redis-is-configured-to-save-rdb-snapashots&#34; width=&#34;732&#34; height=&#34;120&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginx开启gzip压缩</title>
      <link>http://tanteng.me/2016/06/nginx-gzip/</link>
      <pubDate>Sun, 05 Jun 2016 06:10:48 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/06/nginx-gzip/</guid>
      <description>&lt;p&gt;在服务器Nginx开启gzip压缩是优化网站性能的方法之一，可以有效减少服务器带宽的消耗，缺点是会增大CPU的占用率，但是很多时候CPU往往是空闲最多的。&lt;/p&gt;

&lt;p&gt;引用nginx官网的介绍：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;ngx_http_gzip_module&lt;/code&gt; module is a filter that compresses responses using the “gzip” method. This often helps to reduce the size of transmitted data by half or even more.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Crontab部署计划任务注意事项</title>
      <link>http://tanteng.me/2016/05/crontab-task-note/</link>
      <pubDate>Wed, 18 May 2016 08:28:17 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/05/crontab-task-note/</guid>
      <description>&lt;p&gt;使用Crontab部署计划任务，有几个地方需要注意。&lt;/p&gt;

&lt;p&gt;1.每3小时执行一次，不是* */3 * * *,这样还是每分钟执行一次，应该是0 */3 * * *.&lt;/p&gt;

&lt;p&gt;2.Crontab运行的文件必须要有可执行权限，给文件添加可执行文件的方法：chmod +x filename.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rsync 远程数据同步工具</title>
      <link>http://tanteng.me/2016/05/linux-rsync/</link>
      <pubDate>Wed, 11 May 2016 09:54:29 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/05/linux-rsync/</guid>
      <description>&lt;p&gt;rsync 是一个远程数据同步工具，可以同步文件到远程服务器，使用 rsync 算法来比较文件的不同，它只会覆盖有修改的文件，和新增文件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux压缩命令，tar –exclude和zip -x排除目录</title>
      <link>http://tanteng.me/2016/05/tar-exclude/</link>
      <pubDate>Wed, 11 May 2016 05:11:35 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/05/tar-exclude/</guid>
      <description>&lt;p&gt;记录一下tar压缩命令排除某个目录语法：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:vim decode:true&#34;&gt;tar -zcvf daili.tar.gz &amp;ndash;exclude=./inc/log &amp;ndash;exclude=./api/tmp ./&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;以上命令是打包当前目录下除了两个exlude注明的目录。&lt;/p&gt;

&lt;p&gt;压缩结束有一句提示：tar: .: file changed as we read it，不过压缩包解压出来没发现遗漏。先无视。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginx 设置 $_SERVER 变量</title>
      <link>http://tanteng.me/2016/04/nginx-set-fastcgi-param/</link>
      <pubDate>Wed, 13 Apr 2016 10:58:09 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/04/nginx-set-fastcgi-param/</guid>
      <description>&lt;p&gt;在有的PHP中定义ENVIRONMENT常量，可以区分开发环境和生产环境，如：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;define(&amp;lsquo;ENVIRONMENT&amp;rsquo;, isset($_SERVER[&amp;lsquo;CI_ENV&amp;rsquo;]) ? $_SERVER[&amp;lsquo;CI_ENV&amp;rsquo;] : &amp;lsquo;development&amp;rsquo;);
switch (ENVIRONMENT)
{
    case &amp;lsquo;development&amp;rsquo;:
        error_reporting(-1);
        ini_set(&amp;lsquo;display_errors&amp;rsquo;, 1);
    break;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;case &#39;testing&#39;:
case &#39;production&#39;:
    ini_set(&#39;display_errors&#39;, 0);
    if (version_compare(PHP_VERSION, &#39;5.3&#39;, &#39;&amp;amp;gt;=&#39;))
    {
        error_reporting(E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_DEPRECATED &amp;amp; ~E_STRICT &amp;amp; ~E_USER_NOTICE &amp;amp; ~E_USER_DEPRECATED);
    }
    else
    {
        error_reporting(E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_USER_NOTICE);
    }
break;

default:
    header(&#39;HTTP/1.1 503 Service Unavailable.&#39;, TRUE, 503);
    echo &#39;The application environment is not set correctly.&#39;;
    exit(1); // EXIT_ERROR
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux命令：强大的grep命令</title>
      <link>http://tanteng.me/2016/04/linux-grep/</link>
      <pubDate>Wed, 13 Apr 2016 06:59:51 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/04/linux-grep/</guid>
      <description>&lt;p&gt;grep是一个文本搜索工具，用于在Linux系统下查找文件，帮你在浩瀚的文件中匹配字符串找到你要找的文件位置，支持正则表达式，它非常强大。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;grep -rnw &amp;lsquo;/path/to/somewhere/&amp;rsquo; -e &amp;ldquo;pattern&amp;rdquo;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>巧用vagrant建立映射目录解决环境兼容问题</title>
      <link>http://tanteng.me/2016/04/vagrantfile-synced-folder/</link>
      <pubDate>Fri, 08 Apr 2016 14:12:34 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/04/vagrantfile-synced-folder/</guid>
      <description>&lt;p&gt;使用Vagrant装虚拟机的童鞋应该知道在Vagrantfile文件中可以定义本机和虚拟机目录映射，如：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;config.vm.synced_folder &amp;quot;../website&amp;quot;, &amp;quot;/usr/share/nginx/html&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;表示把本机的当前文件目录下website目录映射到虚拟机的指定目录，这样在虚拟机中该目录的内容即是website目录下的，也就是实现了目录共享。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginx开启SSI</title>
      <link>http://tanteng.me/2016/04/nginx-ssi/</link>
      <pubDate>Fri, 08 Apr 2016 12:47:34 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/04/nginx-ssi/</guid>
      <description>&lt;p&gt;在一个HTML页面中发现一段这样的代码：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;!--#include virtual=&amp;quot;/new/ssi/script.html&amp;quot;--&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在本地环境打开网页总觉得缺少什么，和测试服务器网页对比，发现确实少了很多内容，原来include virtual是包含另一个页面的意思。但是奇怪，一般包含页面不是在模板页面或者动态页面include其他页面吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php-fpm服务挂掉</title>
      <link>http://tanteng.me/2016/04/php-fpm-start-servers/</link>
      <pubDate>Tue, 05 Apr 2016 14:34:41 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/04/php-fpm-start-servers/</guid>
      <description>&lt;p&gt;今天发了个链接，可能同时在线的人瞬间比较多，结果网站报503错误，回去打开php-fpm错误日志一看，php-fpm服务挂掉了，报如下错误：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:sh decode:true &#34;&gt;[04-Apr-2016 15:38:04] NOTICE: systemd monitor interval set to 10000ms
[05-Apr-2016 19:03:08] WARNING: [pool www] seems busy (you may need to increase pm.start_servers, or pm.min/max_spare_servers), spawning 8 children, there are 0 idle, and 29 total children
[05-Apr-2016 19:03:09] WARNING: [pool www] seems busy (you may need to increase pm.start_servers, or pm.min/max_spare_servers), spawning 16 children, there are 0 idle, and 34 total children
[05-Apr-2016 19:03:11] WARNING: [pool www] seems busy (you may need to increase pm.start_servers, or pm.min/max_spare_servers), spawning 32 children, there are 0 idle, and 39 total children
[05-Apr-2016 19:03:12] WARNING: [pool www] seems busy (you may need to increase pm.start_servers, or pm.min/max_spare_servers), spawning 32 children, there are 0 idle, and 44 total children
[05-Apr-2016 19:03:13] WARNING: [pool www] seems busy (you may need to increase pm.start_servers, or pm.min/max_spare_servers), spawning 32 children, there are 0 idle, and 49 total children
[05-Apr-2016 19:03:14] WARNING: [pool www] server reached pm.max_children setting (50), consider raising it
&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>.git/config文件泄露修复</title>
      <link>http://tanteng.me/2016/04/git-config-safe/</link>
      <pubDate>Mon, 04 Apr 2016 15:31:13 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/04/git-config-safe/</guid>
      <description>&lt;p&gt;阿里云的云盾系统报告一个系统漏洞，提示：系统配置泄露，路径是&lt;a href=&#34;https://blog.tanteng.me:80/.git/config，用浏览器打开，一个文本文件就下载下来了，内容如下（经修改）：&#34;&gt;https://blog.tanteng.me:80/.git/config，用浏览器打开，一个文本文件就下载下来了，内容如下（经修改）：&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:sh decode:true&#34;&gt;[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
[remote &amp;ldquo;origin&amp;rdquo;]
    url = xxxxx
    fetch = xxxxxx
[branch &amp;ldquo;master&amp;rdquo;]
    remote = origin
    merge = refs/heads/master
&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mac上安装Homestead</title>
      <link>http://tanteng.me/2016/04/homestead/</link>
      <pubDate>Sun, 03 Apr 2016 10:12:00 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/04/homestead/</guid>
      <description>&lt;p&gt;之前在Windows上用VirtualBox+Vagrant装了一个CentOS 7的虚拟机，回家后又把Mac上的PHP集成开发环境MAMP给卸载了，也用VirtualBox+Vagrant装一个虚拟机，这次用的是Laravel官方封装好的box——Homestead.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常用的CentOS 7 yum源集合</title>
      <link>http://tanteng.me/2016/03/centos-7-repo/</link>
      <pubDate>Thu, 31 Mar 2016 09:40:55 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/centos-7-repo/</guid>
      <description>&lt;p&gt;记录几个常用的CentOS 7下的yum源，包括PHP7，MariaDB，Redis，Nginx等，以及阿里云源，方便虚拟机或云主机上安装这些软件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP-FPM性能优化参考</title>
      <link>http://tanteng.me/2016/03/php-fpm-conf/</link>
      <pubDate>Tue, 29 Mar 2016 16:55:16 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/php-fpm-conf/</guid>
      <description>&lt;p&gt;转载一篇关于PHP-FPM配置文件优化的文章，根据机器的配置设置参数，提高性能。&lt;/p&gt;

&lt;p&gt;php-fpm.conf有两个至关重要的参数：一个是”max_children”，另一个是”request_terminate_timeout”.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在阿里云CentOS 7创建swap分区</title>
      <link>http://tanteng.me/2016/03/aliyun-centos-7-swap/</link>
      <pubDate>Tue, 29 Mar 2016 01:52:34 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/aliyun-centos-7-swap/</guid>
      <description>&lt;p&gt;创建swap分区是为了弥补物理内存的不足，也就是虚拟内存的概念，把硬盘的一部分划分作为虚拟内存，但这个空间不是越大越好，硬盘的速度远低于内存，设置不当反而拖慢系统的速度。&lt;/p&gt;

&lt;p&gt;阿里云的主机默认没有swap分区，可以使用free命令查看：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.tanteng.me/wp-content/uploads/2016/03/aliyun_swap.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone wp-image-9771 size-full&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2016/03/aliyun_swap.png&#34; alt=&#34;aliyun_swap&#34; width=&#34;519&#34; height=&#34;112&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL数据库性能优化之缓存参数设置</title>
      <link>http://tanteng.me/2016/03/innodb_buffer_pool_size/</link>
      <pubDate>Mon, 28 Mar 2016 04:02:15 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/innodb_buffer_pool_size/</guid>
      <description>&lt;p&gt;网站运行在阿里云上，1G内存，PHP7+PHP-FPM+Nginx+MariaDB+Redis都安装在一台服务器上，而网站访问量一天也有500IP，不多，但也造成了一点压力，刚放上去几天数据库经常会挂掉，于是查阅数据库方面的性能优化，需要设置一些参数。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux命令alias和ln（别名和链接命令）</title>
      <link>http://tanteng.me/2016/03/linux-alias-ln/</link>
      <pubDate>Sun, 27 Mar 2016 12:24:31 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/linux-alias-ln/</guid>
      <description>&lt;p&gt;今天遇到个问题，我用 yum 的方式安装的 php7 的环境，包括 nginx ， php-fpm 等，使用的是 remi 源，安装成功，但是 PHP 的全局环境变量是 php70 ，也就是说在终端本来命令 php 是可用的，现在必须是 php70 了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginx性能调优之buffer参数设置</title>
      <link>http://tanteng.me/2016/03/nginx-buffer-params/</link>
      <pubDate>Sun, 27 Mar 2016 10:07:51 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/nginx-buffer-params/</guid>
      <description>&lt;p&gt;打开Nginx的error.log日志文件，发现很多warn的警告错误，提示：&lt;/p&gt;

&lt;p&gt;①2016/03/25 13:18:35 [warn] 1171#0: *10875 an upstream response is buffered to a temporary file /var/cache/nginx/fastcgi_temp/0/08/0000000080 while reading upstream, client: 106.38.241.105, server: blog.tanteng.me, request: “GET /page/38/ HTTP/1.1”, upstream: “fastcgi://127.0.0.1:9000”, host: “blog.tanteng.me”.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>完整的nginx配置文件示例</title>
      <link>http://tanteng.me/2016/03/nginx-conf-demo/</link>
      <pubDate>Sun, 27 Mar 2016 10:03:00 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/nginx-conf-demo/</guid>
      <description>&lt;p&gt;这是一个比较完整的nginx配置文件示例，下面的nginx.conf简单的实现nginx在前端做反向代理服务器的例子，处理js、png等静态文件，jsp等动态请求转发到其它服务器tomcat，以及负载均衡的配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux软件安装目录惯例</title>
      <link>http://tanteng.me/2016/03/linux-install-folder/</link>
      <pubDate>Thu, 24 Mar 2016 08:53:30 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/linux-install-folder/</guid>
      <description>&lt;p&gt;Linux 的软件安装目录是也是有讲究的，理解这一点，在对系统管理是有益的&lt;/p&gt;

&lt;p&gt;/usr：系统级的目录，可以理解为C:/Windows/，/usr/lib理解为C:/Windows/System32.&lt;/p&gt;

&lt;p&gt;/usr/local：用户级的程序目录，可以理解为C:/Progrem Files/。用户自己编译的软件默认会安装到这个目录下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用VirtualBox&#43;Vagrant安装CentOS 7环境</title>
      <link>http://tanteng.me/2016/03/windows-virtualbox-vagrant-centos7/</link>
      <pubDate>Thu, 24 Mar 2016 08:08:55 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/windows-virtualbox-vagrant-centos7/</guid>
      <description>&lt;p&gt;在Windows上使用VirtualBox+Vagrant安装CentOS 7环境，需要安装VirtualBox和Vagrant工具，以及下载一个CentOS 7的box镜像文件。&lt;/p&gt;

&lt;p&gt;一、安装好以上工具，下载好box文件后，使用vagrant命令添加镜像到Vagrant：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:vim decode:true&#34;&gt;vagrant box add 名称 路径&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这里成功添加镜像到Vagrant，如下：&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-9724 size-full&#34; src=&#34;https://blog.tanteng.me/wp-content/uploads/2016/03/vagrant_box_add.png&#34; alt=&#34;vagrant_box_add&#34; width=&#34;603&#34; height=&#34;109&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>设置Redis最大占用内存</title>
      <link>http://tanteng.me/2016/03/redis-maxmemory/</link>
      <pubDate>Wed, 23 Mar 2016 08:48:47 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/redis-maxmemory/</guid>
      <description>&lt;p&gt;Redis需要设置最大占用内存吗？如果Redis内存使用超出了设置的最大值会怎样？&lt;/p&gt;

&lt;h3 id=&#34;设置redis最大占用内存&#34;&gt;设置Redis最大占用内存&lt;/h3&gt;

&lt;p&gt;Redis设置最大占用内存，打开redis配置文件，找到如下段落，设置maxmemory参数，maxmemory是bytes字节类型，注意转换。修改如下所示：&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;lang:vim decode:true&#34;&gt;# In short&amp;hellip; if you have slaves attached it is suggested that you set a lower&lt;/p&gt;

&lt;h1 id=&#34;limit-for-maxmemory-so-that-there-is-some-free-ram-on-the-system-for-slave&#34;&gt;limit for maxmemory so that there is some free RAM on the system for slave&lt;/h1&gt;

&lt;h1 id=&#34;output-buffers-but-this-is-not-needed-if-the-policy-is-noeviction&#34;&gt;output buffers (but this is not needed if the policy is &amp;lsquo;noeviction&amp;rsquo;).&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;maxmemory-lt-bytes-gt&#34;&gt;maxmemory &amp;lt;bytes&amp;gt;&lt;/h1&gt;

&lt;p&gt;maxmemory 268435456&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;本机服务器redis配置文件路径：/etc/redis/6379.conf，由于本机自带内存只有1G，一般推荐Redis设置内存为最大物理内存的四分之三，所以设置0.75G，换成byte是751619276.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis未授权访问漏洞</title>
      <link>http://tanteng.me/2016/03/redis-6379-safe/</link>
      <pubDate>Mon, 21 Mar 2016 06:07:24 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/redis-6379-safe/</guid>
      <description>&lt;p&gt;在阿里云上挂了一个网站，运行CentOS+PHP+Nginx，服务器装了redis，端口是6379，打开阿里云后台云盾报一个安全漏洞，漏洞类型是Redis未授权访问漏洞，漏洞地址是xx.xx.xx.xx:6379，也提供了解决方案。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>配置nginx 301跳转到www域</title>
      <link>http://tanteng.me/2016/03/nginx-301/</link>
      <pubDate>Wed, 16 Mar 2016 15:34:13 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/nginx-301/</guid>
      <description>&lt;p&gt;如一个网站www.tanteng.me，域名解析的时候配置www.tanteng.me和tanteng.me都指向一个A记录，这两个域名都可以访问，但是这样会有一些弊端，详见：&lt;a href=&#34;https://www.zhihu.com/question/20414602&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;为什么越来越多的网站域名不加 ‘www’ 前缀？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如何在nginx中配置，当访问&lt;a href=&#34;https://www.tanteng.me&#34; target=&#34;_blank&#34;&gt;tanteng.me&lt;/a&gt;的时候自动301跳转到&lt;a href=&#34;https://www.tanteng.me&#34; target=&#34;_blank&#34;&gt;www.tanteng.me&lt;/a&gt;呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阿里云CentOS安装Redis并配置生产环境自动启动</title>
      <link>http://tanteng.me/2016/03/centos-redis-server/</link>
      <pubDate>Sun, 06 Mar 2016 15:27:32 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/03/centos-redis-server/</guid>
      <description>&lt;p&gt;在阿里云CentOS 7系统安装Redis服务，并配置生产环境自动启动。1.安装redis 2.生成环境启动redis的配置，并介绍CentOS下update-rc.d命令不可用的解决方案。&lt;/p&gt;

&lt;p&gt;1.安装redis&lt;/p&gt;

&lt;p&gt;$ wget &lt;a href=&#34;http://download.redis.io/releases/redis-3.0.7.tar.gz&#34;&gt;http://download.redis.io/releases/redis-3.0.7.tar.gz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;$ tar xzf redis-3.0.7.tar.gz&lt;/p&gt;

&lt;p&gt;$ cd redis-3.0.7&lt;/p&gt;

&lt;p&gt;$ make&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阿里云9折推荐码：e1v42k</title>
      <link>http://tanteng.me/2016/02/aliyun-recommend-code/</link>
      <pubDate>Sat, 20 Feb 2016 16:17:29 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/02/aliyun-recommend-code/</guid>
      <description>&lt;p&gt;我有一个阿里云9折推荐码：e1v42k，分享给你，第一次购买云服务器或云数据库可享受原价9折优惠，还可多人使用，马上去看看。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOS 7 安装 PHP 7</title>
      <link>http://tanteng.me/2016/02/centos-yum-install-php7/</link>
      <pubDate>Wed, 03 Feb 2016 09:53:28 +0000</pubDate>
      
      <guid>http://tanteng.me/2016/02/centos-yum-install-php7/</guid>
      <description>&lt;p&gt;在centos7通过yum安装PHP7，首先在终端运行：&lt;/p&gt;

&lt;p&gt;rpm -Uvh &lt;a href=&#34;https://mirror.webtatic.com/yum/el7/webtatic-release.rpm&#34;&gt;https://mirror.webtatic.com/yum/el7/webtatic-release.rpm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;提示错误：&lt;/p&gt;

&lt;p&gt;error: Failed dependencies:&lt;/p&gt;

&lt;p&gt;epel-release &amp;gt;= 7 is needed by webtatic-release-7-3.noarch&lt;/p&gt;

&lt;p&gt;需要先安装epel-release。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux命令:tail,grep</title>
      <link>http://tanteng.me/2015/10/linux-tail-grep/</link>
      <pubDate>Wed, 21 Oct 2015 15:51:41 +0000</pubDate>
      
      <guid>http://tanteng.me/2015/10/linux-tail-grep/</guid>
      <description>&lt;p&gt;今天来学习两个Linux命令：tail和grep.&lt;/p&gt;

&lt;p&gt;tail命令从指定点开始将文件写到标准输出.使用tail命令的-f选项可以方便的查阅正在改变的日志文件，常用来跟踪系统日志文件，tail -f filename会把filename里最尾部的内容显示在屏幕上，并且不断刷新，使你看到最新的文件内容。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>